{"ast":null,"code":"var _jsxFileName = \"/Users/reggordon/Downloads/gp-hosted-fields-react/client/src/lightbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lightbox() {\n  _s();\n  const [lightboxData, setLightboxData] = useState(null);\n  const launchLightbox = async () => {\n    try {\n      const res = await fetch('/lightbox-init', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: '1000'\n        }) // or capture user input\n      });\n      if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n      const data = await res.json();\n      setLightboxData(data);\n\n      // Inject Lightbox form and submit\n      const form = document.createElement('form');\n      form.method = 'POST';\n      form.action = 'https://pay.sandbox.realexpayments.com/pay';\n      form.style.display = 'none';\n      const addField = (name, value) => {\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = name;\n        input.value = value;\n        form.appendChild(input);\n      };\n      addField('MERCHANT_ID', data.merchantId);\n      addField('ACCOUNT', data.account);\n      addField('ORDER_ID', data.orderId);\n      addField('AMOUNT', data.amount);\n      addField('CURRENCY', data.currency);\n      addField('TIMESTAMP', data.timestamp);\n      addField('SHA1HASH', data.sha1);\n      addField('AUTO_SETTLE_FLAG', '1');\n      addField('HPP_VERSION', '2');\n      addField('HPP_SELECT_STYLES', 'Y');\n      addField('HPP_RESPONSE_MODE', 'lightbox');\n      document.body.appendChild(form);\n      const script = document.createElement('script');\n      script.src = 'https://pay.sandbox.realexpayments.com/pay';\n      document.body.appendChild(script);\n      script.onload = () => {\n        if (window.RealexHpp) {\n          window.RealexHpp.open();\n        }\n      };\n    } catch (error) {\n      console.error('Error loading HPP data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lightbox Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: launchLightbox,\n      children: \"Pay with Lightbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Lightbox, \"zGRUlAYSTLt8ciKmO0Z9eo4xzDE=\");\n_c = Lightbox;\nexport default Lightbox;\nvar _c;\n$RefreshReg$(_c, \"Lightbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Lightbox","_s","lightboxData","setLightboxData","launchLightbox","res","fetch","method","headers","body","JSON","stringify","amount","ok","Error","status","data","json","form","document","createElement","action","style","display","addField","name","value","input","type","appendChild","merchantId","account","orderId","currency","timestamp","sha1","script","src","onload","window","RealexHpp","open","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/reggordon/Downloads/gp-hosted-fields-react/client/src/lightbox.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Lightbox() {\n  const [lightboxData, setLightboxData] = useState(null);\n\n  const launchLightbox = async () => {\n    try {\n      const res = await fetch('/lightbox-init', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: '1000' }) // or capture user input\n      });\n\n      if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n\n      const data = await res.json();\n      setLightboxData(data);\n\n      // Inject Lightbox form and submit\n      const form = document.createElement('form');\n      form.method = 'POST';\n      form.action = 'https://pay.sandbox.realexpayments.com/pay';\n      form.style.display = 'none';\n\n      const addField = (name, value) => {\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = name;\n        input.value = value;\n        form.appendChild(input);\n      };\n\n      addField('MERCHANT_ID', data.merchantId);\n      addField('ACCOUNT', data.account);\n      addField('ORDER_ID', data.orderId);\n      addField('AMOUNT', data.amount);\n      addField('CURRENCY', data.currency);\n      addField('TIMESTAMP', data.timestamp);\n      addField('SHA1HASH', data.sha1);\n      addField('AUTO_SETTLE_FLAG', '1');\n      addField('HPP_VERSION', '2');\n      addField('HPP_SELECT_STYLES', 'Y');\n      addField('HPP_RESPONSE_MODE', 'lightbox');\n\n      document.body.appendChild(form);\n\n      const script = document.createElement('script');\n      script.src = 'https://pay.sandbox.realexpayments.com/pay';\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        if (window.RealexHpp) {\n          window.RealexHpp.open();\n        }\n      };\n    } catch (error) {\n      console.error('Error loading HPP data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Lightbox Checkout</h1>\n      <button onClick={launchLightbox}>Pay with Lightbox</button>\n    </div>\n  );\n}\n\nexport default Lightbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}